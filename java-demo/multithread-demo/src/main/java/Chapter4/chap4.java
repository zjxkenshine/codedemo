package Chapter4;

public class chap4 {
	
	/**第四章：Lock的使用
	 * 
	 * -----------使用ReentratLock类----------------
	 * 4_01: 使用ReentratLock实现同步：测试1
	 * 4_02: 使用ReentratLock实现同步：测试2
	 * 
	 * -----------Condition实现等待/通知----------------
	 * 4_03: 使用Condition实现等待/通知：错误的用法及解决
	 * 4_04: 正确使用Condition实现等待/通知
	 * 4_05: 使用多个Condition实现通知部分线程时的错误用法
	 * 4_06: 正确使用多个Condition实现通知部分线程
	 * 4_07: 实现生产者/消费者模式：一对一打印
	 * 4_08: 实现生产者/消费者模式：多对多打印
	 * 
	 * -----------公平锁与非公平锁----------------
	 * 4_09: 公平锁与非公平锁
	 * 
	 * -----------Lock的其他方法和操作----------------
	 * 4_10: 方法getHoldCount(),getQueueLength()和getWaitQueueLength()
	 * 4_11: 方法hasQueueThread(),hasQueueThreads()和hasWaiters()
	 * 4_12: 方法isFair(),isHeldByCurrentThread()和isLocked()
	 * 4_13: 方法lockInterruptibly(),tryLock()和tryLock(long timeout,TimeUnit unit)
	 * 4_14: 方法awaitUninterruptibly()的使用
	 * 4_15: 方法awaitUntil()的使用
	 * 4_16: 用Condition实现顺序执行
	 * 
	 * -----------ReentrantReadWriteLock类----------------
	 * 4_17: ReentrantReadWriteLock类的使用：【读读共享】
	 * 4_18: ReentrantReadWriteLock类的使用：【写写互斥】
	 * 4_19: ReentrantReadWriteLock类的使用：【读写互斥】
	 * 4_20: ReentrantReadWriteLock类的使用：【写读互斥】
	 * 
	 */

}
