#自定义的属性，指定了一个路径，注意要以/结尾
web.upload-path=D:/resources/
#表示所有的访问都经过静态资源路径
spring.mvc.static-path-pattern=/res/**
#配置所有的静态资源路径,要将默认的也加上否则static、public等这些路径将不能被当作静态资源路径.末尾是我们自己的自定义资源路径
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:${web.upload-path}


# thymeleaf配置
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# 路径匹配
#设置是否遵循后缀匹配模式，如“/user”是否匹配/user.*，为true时就匹配;
spring.mvc.pathmatch.use-suffix-pattern=true
#设置是否自动后缀留级匹配模式，如“/user”是否匹配“/user/”，为true是即匹配
spring.mvc.pathmatch.use-registered-suffix-pattern=false

#开启支持扩展名功能
#例如访问/test/1.xml则返回xml格式的文件;如访问/test/1.json返回的是json格式数据.
#该方式丧失了同一url多种展现的方式,但现在这种在实际环境中是使用最多的.因为更加符合程序员的审美观.
spring.mvc.contentnegotiation.favor-path-extension=true
#开启内容协商的请求参数功能,默认没有开启 如：http://localhost:8080/show？format=json
spring.mvc.contentnegotiation.favor-parameter=true

# freemaker配置
#.ftl文件存放位置
spring.freemarker.template-loader-path=classpath:/templates/
#spring.freemarker.prefix=
spring.freemarker.suffix=.ftl
spring.freemarker.cache=false
spring.freemarker.charset=utf-8
spring.freemarker.check-template-location=true
spring.freemarker.content-type=text/html
spring.freemarker.allow-request-override=true
spring.freemarker.allow-session-override=true
spring.freemarker.request-context-attribute=request